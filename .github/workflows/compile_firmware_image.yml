name: Compile Tasmota AWS IoT firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest Tasmota release
        id: get_current_release
        run: |
          CURRENT_RELEASE_TAG=$(curl -s https://api.github.com/repos/arendst/Tasmota/releases/latest | jq -r '.tag_name')
          echo "current_release_tag=$CURRENT_RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "Current Tasmota release: $CURRENT_RELEASE_TAG"

      - name: Checkout latest Tasmota release
        uses: actions/checkout@v4
        with:
          repository: arendst/tasmota
          ref: refs/tags/${{ steps.get_current_release.outputs.current_release_tag }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install wheel
          pip install -U platformio

      - name: Run PlatformIO
        run: |
          set PLATFORMIO_BUILD_FLAGS=-DUSE_MQTT_TLS -DUSE_MQTT_AWS_IOT_LIGHT -DUSE_MQTT_TLS_CA_CERT; platformio run -e tasmota -v

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: ./build_output

#
#  Release:
#    needs: [base-images, base32-images, language-images]
#    runs-on: ubuntu-latest
#    continue-on-error: true
#    steps:
#    - uses: actions/checkout@v3
#    - name: Download Tasmota firmwares
#      uses: actions/download-artifact@v3
#      with:
#        name: firmware
#        path: ./mv_firmware
#    - name: Display structure of downloaded files
#      run: ls -R ./mv_firmware/
#    - name: Zip all map.gz files in one file -> map_all.zip
#      run: 7z a -mx=9 -tzip -xr'!.*' map_all.zip mv_firmware/map
#    - name: Release
#      uses: jason2866/action-gh-release@v1.2
#      #if: startsWith(github.ref, 'refs/tags/')
#      with:
#        tag_name: ${{ github.run_number }}
#        files: |
#          ./mv_firmware/firmware/*
#          map_all.zip
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
